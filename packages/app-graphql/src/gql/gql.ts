/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "query GetSubscription($slug: String) {\n  subscriptionCollection(slug: $slug) {\n    id\n    plan\n    status\n    startedAt\n    trialEndsAt\n    createdAt\n    updatedAt\n  }\n}": types.GetSubscriptionDocument,
    "mutation AddComment($contactId: String!, $comment: String!) {\n  addActivityCommentCollection(id: $contactId, comment: $comment) {\n    id\n    user {\n      id\n      name\n      avatar\n      status\n    }\n    type\n    data\n    date\n    createdAt\n    updatedAt\n  }\n}": types.AddCommentDocument,
    "mutation CreateContact($name: String!) {\n  createContactCollection(name: $name) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n  }\n}": types.CreateContactDocument,
    "mutation DeleteComment($id: String!) {\n  deleteActivityCommentCollection(id: $id)\n}": types.DeleteCommentDocument,
    "query GetContact($id: String) {\n  contactCollection(id: $id) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}": types.GetContactDocument,
    "query GetContactActivities($id: String) {\n  activitiesCollection(contactId: $id) {\n    id\n    user {\n      id\n      name\n      avatar\n      status\n    }\n    type\n    data\n    date\n    createdAt\n    updatedAt\n  }\n}": types.GetContactActivitiesDocument,
    "query GetContacts($type: String) {\n  contactsCollection(type: $type) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n    type\n    tags\n    status\n    createdAt\n    updatedAt\n  }\n}": types.GetContactsDocument,
    "mutation CreateOrganization($name: String!) {\n  createOrganizationCollection(name: $name) {\n    id\n    name\n    slug\n    plan\n  }\n}": types.CreateOrganizationDocument,
    "query GetOrganization($id: String, $slug: String) {\n  organizationCollection(id: $id, slug: $slug) {\n    id\n    name\n    slug\n    plan\n    email\n    logo\n    members {\n      roles\n      user {\n        id\n        name\n        email\n        status\n      }\n    }\n  }\n}": types.GetOrganizationDocument,
    "query GetOrganizations {\n  organizationsCollection {\n    id\n    name\n    slug\n    plan\n    logo\n  }\n}": types.GetOrganizationsDocument,
    "mutation InviteToOrganization($emails: [String]!, $organizationId: String!, $role: String) {\n  inviteToOrganizationCollection(\n    emails: $emails\n    organizationId: $organizationId\n    role: $role\n  )\n}": types.InviteToOrganizationDocument,
    "mutation RemoveUserFromOrganization($userId: String!, $organizationId: String!) {\n  removeUserFromOrganizationCollection(\n    userId: $userId\n    organizationId: $organizationId\n  )\n}": types.RemoveUserFromOrganizationDocument,
    "mutation UpdateMemberRoles($userId: String!, $organizationId: String!, $roles: [String]!) {\n  updateMemberRolesCollection(\n    userId: $userId\n    organizationId: $organizationId\n    roles: $roles\n  ) {\n    roles\n  }\n}": types.UpdateMemberRolesDocument,
    "mutation UpdateOrganization($id: String!, $name: String!, $email: String) {\n  updateOrganizationCollection(id: $id, name: $name, email: $email) {\n    id\n    name\n    slug\n    email\n  }\n}": types.UpdateOrganizationDocument,
    "query GetCurrentUser {\n  currentUserCollection {\n    id\n    name\n    email\n    avatar\n    organizations {\n      id\n      name\n      slug\n      plan\n      logo\n    }\n  }\n}": types.GetCurrentUserDocument,
    "mutation UpdateUser($id: String!, $name: String, $email: String) {\n  updateUserCollection(id: $id, name: $name, email: $email) {\n    id\n    name\n    email\n    organizations {\n      id\n      name\n      slug\n      plan\n    }\n  }\n}": types.UpdateUserDocument,
};

export function gql(source: "query GetSubscription($slug: String) {\n  subscriptionCollection(slug: $slug) {\n    id\n    plan\n    status\n    startedAt\n    trialEndsAt\n    createdAt\n    updatedAt\n  }\n}"): (typeof documents)["query GetSubscription($slug: String) {\n  subscriptionCollection(slug: $slug) {\n    id\n    plan\n    status\n    startedAt\n    trialEndsAt\n    createdAt\n    updatedAt\n  }\n}"];
export function gql(source: "mutation AddComment($contactId: String!, $comment: String!) {\n  addActivityCommentCollection(id: $contactId, comment: $comment) {\n    id\n    user {\n      id\n      name\n      avatar\n      status\n    }\n    type\n    data\n    date\n    createdAt\n    updatedAt\n  }\n}"): (typeof documents)["mutation AddComment($contactId: String!, $comment: String!) {\n  addActivityCommentCollection(id: $contactId, comment: $comment) {\n    id\n    user {\n      id\n      name\n      avatar\n      status\n    }\n    type\n    data\n    date\n    createdAt\n    updatedAt\n  }\n}"];
export function gql(source: "mutation CreateContact($name: String!) {\n  createContactCollection(name: $name) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n  }\n}"): (typeof documents)["mutation CreateContact($name: String!) {\n  createContactCollection(name: $name) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n  }\n}"];
export function gql(source: "mutation DeleteComment($id: String!) {\n  deleteActivityCommentCollection(id: $id)\n}"): (typeof documents)["mutation DeleteComment($id: String!) {\n  deleteActivityCommentCollection(id: $id)\n}"];
export function gql(source: "query GetContact($id: String) {\n  contactCollection(id: $id) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}"): (typeof documents)["query GetContact($id: String) {\n  contactCollection(id: $id) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n    status\n    type\n    createdAt\n    updatedAt\n  }\n}"];
export function gql(source: "query GetContactActivities($id: String) {\n  activitiesCollection(contactId: $id) {\n    id\n    user {\n      id\n      name\n      avatar\n      status\n    }\n    type\n    data\n    date\n    createdAt\n    updatedAt\n  }\n}"): (typeof documents)["query GetContactActivities($id: String) {\n  activitiesCollection(contactId: $id) {\n    id\n    user {\n      id\n      name\n      avatar\n      status\n    }\n    type\n    data\n    date\n    createdAt\n    updatedAt\n  }\n}"];
export function gql(source: "query GetContacts($type: String) {\n  contactsCollection(type: $type) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n    type\n    tags\n    status\n    createdAt\n    updatedAt\n  }\n}"): (typeof documents)["query GetContacts($type: String) {\n  contactsCollection(type: $type) {\n    id\n    firstName\n    lastName\n    fullName\n    email\n    type\n    tags\n    status\n    createdAt\n    updatedAt\n  }\n}"];
export function gql(source: "mutation CreateOrganization($name: String!) {\n  createOrganizationCollection(name: $name) {\n    id\n    name\n    slug\n    plan\n  }\n}"): (typeof documents)["mutation CreateOrganization($name: String!) {\n  createOrganizationCollection(name: $name) {\n    id\n    name\n    slug\n    plan\n  }\n}"];
export function gql(source: "query GetOrganization($id: String, $slug: String) {\n  organizationCollection(id: $id, slug: $slug) {\n    id\n    name\n    slug\n    plan\n    email\n    logo\n    members {\n      roles\n      user {\n        id\n        name\n        email\n        status\n      }\n    }\n  }\n}"): (typeof documents)["query GetOrganization($id: String, $slug: String) {\n  organizationCollection(id: $id, slug: $slug) {\n    id\n    name\n    slug\n    plan\n    email\n    logo\n    members {\n      roles\n      user {\n        id\n        name\n        email\n        status\n      }\n    }\n  }\n}"];
export function gql(source: "query GetOrganizations {\n  organizationsCollection {\n    id\n    name\n    slug\n    plan\n    logo\n  }\n}"): (typeof documents)["query GetOrganizations {\n  organizationsCollection {\n    id\n    name\n    slug\n    plan\n    logo\n  }\n}"];
export function gql(source: "mutation InviteToOrganization($emails: [String]!, $organizationId: String!, $role: String) {\n  inviteToOrganizationCollection(\n    emails: $emails\n    organizationId: $organizationId\n    role: $role\n  )\n}"): (typeof documents)["mutation InviteToOrganization($emails: [String]!, $organizationId: String!, $role: String) {\n  inviteToOrganizationCollection(\n    emails: $emails\n    organizationId: $organizationId\n    role: $role\n  )\n}"];
export function gql(source: "mutation RemoveUserFromOrganization($userId: String!, $organizationId: String!) {\n  removeUserFromOrganizationCollection(\n    userId: $userId\n    organizationId: $organizationId\n  )\n}"): (typeof documents)["mutation RemoveUserFromOrganization($userId: String!, $organizationId: String!) {\n  removeUserFromOrganizationCollection(\n    userId: $userId\n    organizationId: $organizationId\n  )\n}"];
export function gql(source: "mutation UpdateMemberRoles($userId: String!, $organizationId: String!, $roles: [String]!) {\n  updateMemberRolesCollection(\n    userId: $userId\n    organizationId: $organizationId\n    roles: $roles\n  ) {\n    roles\n  }\n}"): (typeof documents)["mutation UpdateMemberRoles($userId: String!, $organizationId: String!, $roles: [String]!) {\n  updateMemberRolesCollection(\n    userId: $userId\n    organizationId: $organizationId\n    roles: $roles\n  ) {\n    roles\n  }\n}"];
export function gql(source: "mutation UpdateOrganization($id: String!, $name: String!, $email: String) {\n  updateOrganizationCollection(id: $id, name: $name, email: $email) {\n    id\n    name\n    slug\n    email\n  }\n}"): (typeof documents)["mutation UpdateOrganization($id: String!, $name: String!, $email: String) {\n  updateOrganizationCollection(id: $id, name: $name, email: $email) {\n    id\n    name\n    slug\n    email\n  }\n}"];
export function gql(source: "query GetCurrentUser {\n  currentUserCollection {\n    id\n    name\n    email\n    avatar\n    organizations {\n      id\n      name\n      slug\n      plan\n      logo\n    }\n  }\n}"): (typeof documents)["query GetCurrentUser {\n  currentUserCollection {\n    id\n    name\n    email\n    avatar\n    organizations {\n      id\n      name\n      slug\n      plan\n      logo\n    }\n  }\n}"];
export function gql(source: "mutation UpdateUser($id: String!, $name: String, $email: String) {\n  updateUserCollection(id: $id, name: $name, email: $email) {\n    id\n    name\n    email\n    organizations {\n      id\n      name\n      slug\n      plan\n    }\n  }\n}"): (typeof documents)["mutation UpdateUser($id: String!, $name: String, $email: String) {\n  updateUserCollection(id: $id, name: $name, email: $email) {\n    id\n    name\n    email\n    organizations {\n      id\n      name\n      slug\n      plan\n    }\n  }\n}"];

export function gql(source: string): unknown;
export function gql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;